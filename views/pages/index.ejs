<!DOCTYPE html>
<html lang="en">
<head>
  <title>Society Name | Dashboard</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
  <style>
    *{
      font-family: 'Inter';
      margin: 0 auto;
    }

    body{
        height: 100vh;
    }
    
    .btnn {
      cursor: pointer;
      position: relative;
      left: 50%;
      color: #fff;
      transform: translateX(-50%);
      width: 80%;
      background-color: rgb(55, 112, 255);
      outline: 0;
      border: 0;
      font-size: 20px;
      padding: 14px 10px;
      font-family: 'Inter', sans-serif;
      border-radius: 5px;
    }
    .top-most{
        background-color: #2d5bff;
        padding: 20px;
        font-weight: 400;
        height: 24vh;
        text-align: center;
    }
    .container{
        background-color: white;
        transform: translateY(-20vh);
        max-height: 90vh;
        min-height: 82vh;
        max-width: 84vw;
        padding: 0px 60px;
        box-shadow: 0 0px 20px rgba(0, 0, 0, 0.15);
    }
    .options{
        margin-top: 10px;
        margin-left: 0;
        cursor: pointer;
    }
    .options div{
      padding: 12px;
      color: rgb(39, 51, 57);
      border: 2px solid rgb(189, 189, 189);
      margin-bottom: 6px;
      max-width: 720px;
      margin: 6px 0;
      border-radius: 4px;
    }
    .options div span{
      float: right;
    }
    .box{
        background-color: #eef3fe;
        padding: 30px 32px;
        border-radius: 20px;
        width: max-content;
    }
    .options p{
        display: block;
        font-size: 22px;
        margin-top: 4px;
        color: #646465;
    }
    .row{
      display: flex;
      justify-content: space-between;
      margin-bottom: 20px;
    }
    .con-section{
      width: 48%;
      height: 32vh;
      overflow: auto;
    }
    .butn{
        background-color: rgb(55, 112, 255);
        border: none;
        color: white;
        font-size: 18px;
        display: block;
        margin: 4px 12px;
        padding: 12px 18px;
        border-radius: 4px;
        cursor: pointer;
    }
    @media screen and (max-width: 1000px){
      h1{
        font-size: 28px !important;
      }
      .vertical-row{
        display: flex;
      }
      .vertical-row > label{
        display: none !important;
      }
      .covid > label{
        display: block !important;
      }
      .vertical-row > .row{
        display: block !important;
      }
    }
    @media screen and (max-width: 900px) {
      .headingt{
        display: block !important;
      }
      h1{
        margin-bottom: 2px !important;
      }
      .buttons{
        margin-bottom: 12px !important;
      }
      .con-section{
        width: 100% !important;
        margin-bottom: 22px;
        height: max-content;
        overflow: visible;
      }
      .container{
        box-shadow: none;
        padding: 0 30px;
        width: 100vw;
        max-width: calc(100vw - 60px);
      }
    }
    @media screen and (max-width: 750px){
      .row{
        display: block;
      }
    }
    @media screen and (max-width: 600px){
      h1{
        width: 100% !important;
        text-align: center;
      }
      .vertical-row h1{
        text-align: left;
      }
      .container{
        padding: 0 30px;
        width: 100vw;
        max-width: calc(100vw - 60px);
      }
      .buttons{
        width: 100% !important;
      }
      .butn{
        padding: 12px !important;
      }
    }
    .title{
      font-size: 20px;
      font-weight: bold;
      color: black;
      max-width: 70%;
      text-align: left;
      width: 100%;
      margin: 0;
    }
    .description { 
      max-width: 100%;  
      height: auto;
      padding-bottom: 10px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.5);
      color: rgb(58, 58, 59);
    }
    .an-con p, .th-con p{
      margin: 0;
    }
    .an-con, .th-con{
      justify-content: space-between;
      display: flex;
    }
    .announcement, .thread{
      padding: 4px 8px;
      position: relative;
    }
    .open{
      cursor: pointer;
      position: absolute;
      bottom: 6px;
      right: 10px;
      color:rgb(65, 65, 194);
    }
    .containerDesc{
      display: none;
    }
    .descriptionBox{
      margin-top: 24px;
      max-width: 720px;
    }
    .boxOpen{
      position: fixed;
      z-index: 9999;
      top: 0;
      background-color: white;
      padding: 40px;
      box-shadow:
  0 0px 5.3px rgba(0, 0, 0, 0.028),
  0 0px 17.9px rgba(0, 0, 0, 0.042),
  0 0px 80px rgba(0, 0, 0, 0.07)
;
      transform: translate(-50%, -50%);
      top: 50%;
      display: none;
      left: 50%;
    }
    .row.covid > div{
      width: 100%;
      padding: 4px;
      text-align: left;
    }
    .red{
      color: #eb4034;
    }
    .green{
      color: #34e681;
    }
    .row.covid > div > h1 > p{
      font-size: 18px;
    }
    .field {
        background-color: rgb(252, 252, 252);
        border-radius: 4px;
        border: 2px solid rgb(228, 234, 235);
        box-sizing: border-box;
        height: auto;
        padding: 7px 15px;
        outline: none;
        padding-left: 15px;
        padding-right: 15px;
        width: 100%;
        max-width: 580px;
        font-family: "Nunito Sans", sans-serif;
        font-weight: 400;
        letter-spacing: normal;
        color: rgb(39, 51, 57);
        font-size: 18px;
        line-height: 27px;
        margin: 7px 0;
        display: block;
    }
  </style>
</head>
<body>
  <div class="top-most">
    <h1 style='color: white;font-weight: 300;'><%= comm_name %></h1>
  </div>
  <div class='container' style="padding-top: 30px;">
    <div class="headingt" style="display: flex;justify-content: space-between;">
      <h1 style='font-size: 32px;margin-bottom: 12px;width: max-content;'>Welcome Back <%= name %>!</h1>
      <div style="display: flex;width: max-content;justify-content: space-around;" class="buttons">
        <div style="display: flex;">
          <% if(admin == true) { %>
          <button class="butn" onclick='window.open("http://localhost:8080/admin", "_self");'>Admin</button>
          <% } %>
          <button class="butn" onclick='window.open("http://localhost:8080/profile", "_self");'>View/Edit Profile</button>
          <button class="butn" onclick="logout();">Logout</button>
        </div>
      </div>
    </div>
      <% if(status == '307'){ %>
      <button id='submit' class='btnn' onclick="initialize();" style="margin-top: 30px;max-width: 720px;">Complete Profile</button>
      <% } %>
      <% if(status == '200'){ %>
      <div class="row">
        <div class="con-section">
          <h2>Polls</h2>
          <div class="ongoing-polls">
  
          </div>
        </div>
        <div class="con-section">
          <h2>Announcements</h2>
          <div class="announcements" >
          </div>
        </div>
      </div>
      <div class="row">
        <div class="con-section">
          <h2>Community Threads</h2>
          <div style="display: flex;">
            <button class="butn" style="margin-right: 0;margin-left: 8px;margin-top: 12px;" onclick="document.querySelector('#boxThreadAdd').style.display = 'block';">Add New</button>
          </div>
          <div style="margin-top: 8px;" class="thre">
          </div>
        </div>
        <div class="con-section">
          <h2>COVID-19 Information</h2>
          <div class="vertical-row">
            <label style="margin-top: 12px;display: block;color: rgb(109, 109, 109);">Society</label>
            <div class="row covid">
              <label style="margin-top: 12px;display: block;color: rgb(109, 109, 109);display: none;">Society</label>
              <div class="neutral">
                <h2>Total People</h3>
                <h1>93</h3>
              </div>
              <div class="green">
                <h2>Vaccinated</h3>
                <h1>93</h3>
              </div>
              <div class="red">
                <h2>COVID Positive</h3>
                <h1>93</h3>
              </div>
            </div>
            <label style="margin-top: 12px;display: block;color: rgb(109, 109, 109);">State</label>
            <div class="row covid global">
              <label style="margin-top: 12px;display: block;color: rgb(109, 109, 109);display: none;">State</label>
              <div class="green recovered">
                <h2>Total Recovered</h3>
                <h1>93</h3>
              </div>
              <div class="red newc">
                <h2>Total Cases</h3>
                <h1>93</h3>
              </div>
              <div class="neutral deaths">
                <h2>Total Deaths</h3>
                <h1>93</h3>
              </div>
            </div>
          </div>
        </div>
      </div>
      <% } %>
    </div>
  </div>
  <div class="boxOpen">
    <h1>This is the title</h1>
    <p>Date</p>
    <div class="descriptionBox">
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>
    </div>
    <div class="butn" onclick="this.parentElement.style.display = 'none'" style="width: max-content;margin: 0;margin-top: 20px;">
      Close
    </div>
  </div>
  <div id='boxThreadAdd' class="boxOpen">
    <h1>Add New Thread</h1>
    <input id='thread_h' type='text' class="field" placeholder="Thread heading...">
    <textarea id='thread_c' class="field" placeholder="Thread content..."></textarea>
    <button class="butn" style="margin-left: 0;" onclick="document.querySelector('#boxThreadAdd').style.display = 'none';addThread();">Submit</button>
  </div>
  <script type="text/javascript">!function(){"use strict";var e="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this,t=9007199254740991;function f(e){return!("number"!=typeof e||e!=e||e===1/0||e===-1/0)}function l(e){return"number"==typeof e&&Math.abs(e)<=t}var n=/(hundred|thousand|(m|b|tr|quadr)illion)$/,r=/teen$/,o=/y$/,i=/(zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)$/,s={zero:"zeroth",one:"first",two:"second",three:"third",four:"fourth",five:"fifth",six:"sixth",seven:"seventh",eight:"eighth",nine:"ninth",ten:"tenth",eleven:"eleventh",twelve:"twelfth"};function h(e){return n.test(e)||r.test(e)?e+"th":o.test(e)?e.replace(o,"ieth"):i.test(e)?e.replace(i,a):e}function a(e,t){return s[t]}var u=10,d=100,p=1e3,v=1e6,b=1e9,y=1e12,c=1e15,g=9007199254740992,m=["zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],w=["zero","ten","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"];function x(e,t){var n,r=parseInt(e,10);if(!f(r))throw new TypeError("Not a finite number: "+e+" ("+typeof e+")");if(!l(r))throw new RangeError("Input is not a safe number, it’s either too large or too small.");return n=function e(t){var n,r,o=arguments[1];if(0===t)return o?o.join(" ").replace(/,$/,""):"zero";o||(o=[]);t<0&&(o.push("minus"),t=Math.abs(t));t<20?(n=0,r=m[t]):t<d?(n=t%u,r=w[Math.floor(t/u)],n&&(r+="-"+m[n],n=0)):t<p?(n=t%d,r=e(Math.floor(t/d))+" hundred"):t<v?(n=t%p,r=e(Math.floor(t/p))+" thousand,"):t<b?(n=t%v,r=e(Math.floor(t/v))+" million,"):t<y?(n=t%b,r=e(Math.floor(t/b))+" billion,"):t<c?(n=t%y,r=e(Math.floor(t/y))+" trillion,"):t<=g&&(n=t%c,r=e(Math.floor(t/c))+" quadrillion,");o.push(r);return e(n,o)}(r),t?h(n):n}var M={toOrdinal:function(e){var t=parseInt(e,10);if(!f(t))throw new TypeError("Not a finite number: "+e+" ("+typeof e+")");if(!l(t))throw new RangeError("Input is not a safe number, it’s either too large or too small.");var n=String(t),r=Math.abs(t%100),o=11<=r&&r<=13,i=n.charAt(n.length-1);return n+(o?"th":"1"===i?"st":"2"===i?"nd":"3"===i?"rd":"th")},toWords:x,toWordsOrdinal:function(e){return h(x(e))}};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=M),exports.numberToWords=M):e.numberToWords=M}();</script>
<script>
  function initialize(){
    window.open(`http://localhost:8080/complete?email=${getCook('email_id')}&password='${getCook('password')}'`, '_self');
  }

  function addThread(){
    let thread_c = document.querySelector('#thread_c').value;
    let thread_h = document.querySelector('#thread_h').value;
    fetch('http://localhost:8080/addThreads', {
        'method': 'POST',
        'headers': {
            'Content-Type': 'application/json'   
        },
        'body': JSON.stringify({
            'thread_h': thread_h,
            'thread_c': thread_c
        })
    }).then(r => r.text())
    .then(d => {
      if(d == 'success'){
        window.alert('Added a new thread!');
      }
    });
  }

  function openThread(x){
    window.open(encodeURI(`http://localhost:8080/threads?date=${x.parentElement.classList[2]}&author=${x.parentElement.classList[3].replace('+', ' ')}`), '_self')
  }

  function formatDate(date) {
    var d = new Date(date),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

    if (month.length < 2) 
        month = '0' + month;
    if (day.length < 2) 
        day = '0' + day;

    return [year, month, day].join('-');
  }


  function initializeThread(){
    fetch('http://localhost:8080/returnThreads')
    .then(r => r.json())
    .then(d => {
      d.forEach(i => {
        let x = `<div class="thread ${i.comm_id} ${formatDate(new Date(i.datetime))} ${i.author.replace(' ', '+')}">
              <div class="th-con">
                <span style='width: 50%;text-align: left;'>${i.author}:</span>
                <p class="date" style='width: 50%;text-align: right;'>${new Date(i.datetime).toLocaleString()}</p>
              </div>
              <p class="title" style="display: flex;">${i.thread_h}<span style="font-size: 14px;margin-left: 10px;margin-top: 2px;">👍${i.likes}</span></p>
              <div>
                <p class="description">${i.thread_c}</p>
              </div>
              <div class="open" onclick="openThread(this)">Open</div>
            </div>`
        document.querySelector('.thre').innerHTML += x;
      })
    })
  }

  function fo(x) {
      return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }

  function initAnnouncement(){
    fetch('http://localhost:8080/announcements')
    .then(d => d.json())
    .then(r => {
      r.forEach(i => {
        if(i.status == 400){
          return window.alert(i.message)
        }
        document.querySelector('.announcements').innerHTML += `<div class='announcement'><div class="an-con"><p class='title'>${i.announcement}</p><p class='date'>${new Date(i.date).toLocaleString()}</p></div><div><p class="description">${i.description.length > 140 ? i.description.substr(0,140) + '...' : i.description }</p></div><div class='containerDesc'>${i.description}</div><div class="open" onclick="openThis(this)">Open</div></div>`;
        })
    });
  }

  setTimeout(() => { 
    covidData();
    initializeThread();
  }, 500)

  function covidData(){
    fetch('http://localhost:8080/covid')
    .then(d => d.json())
    .then(r => {
      let {people_c, vaccinated_c, covid_pos_c} = r.data;
      document.querySelector('.neutral h1').innerHTML = people_c;
      document.querySelector('.green h1').innerHTML = vaccinated_c;
      document.querySelector('.red h1').innerHTML = covid_pos_c;
    });
    fetch('https://corona.lmao.ninja/v2/countries/India?yesterday=true&strict=true&query')
    .then(d => d.json())
    .then(r => {
      let {cases,todayCases, recovered,todayRecovered,deaths,todayDeaths} = r;
      document.querySelector('.recovered h1').innerHTML = `${fo(recovered)} <p>(+${fo(todayRecovered)})</p>`;
      document.querySelector('.deaths h1').innerHTML = `${fo(deaths)} <p>(+${fo(todayDeaths)})</p>`;
      document.querySelector('.newc h1').innerHTML = `${fo(cases)} <p>(+${fo(todayCases)})</p>`;
    })
  }

  function openThis(i){
    document.querySelector('.boxOpen').style.display = 'block';
    document.querySelector('.boxOpen h1').innerHTML = Array.from(i.parentElement.firstChild.children)[0].innerHTML;
    document.querySelector('.boxOpen p').innerHTML = Array.from(i.parentElement.firstChild.children)[1].innerHTML;
    document.querySelector('.boxOpen .descriptionBox p').innerHTML = Array.from(i.parentElement.children)[2].innerHTML;
  }

  function logout(){
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
    window.open('http://localhost:8080/login', '_self')
  }

  initPoll();
  initAnnouncement();

  function initPoll(){
    fetch(`http://localhost:8080/polls/${getCook('comm_id')}`)
    .then(r => r.json())
    .then(d => handleData(d))
  }

  function setCookie(cName, cValue, expDays) {
    let date = new Date();
    date.setTime(date.getTime() + (expDays * 24 * 60 * 60 * 1000));
    const expires = "expires=" + date.toUTCString();
    document.cookie = cName + "=" + cValue + "; " + expires + "; path=/";
  }

  function handleData(obj){
    let element = document.createElement('div');
    element.classList.add('poll-one');
    let heading = document.createElement('h2');
    let titleText = document.createTextNode(obj.title);
    if(localStorage.lastPoll !== `${obj.title}`){
      localStorage.lastPoll = `${obj.title}`;
      document.cookie = "voted=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/";
    }
    heading.appendChild(titleText)
    element.appendChild(heading);
    let ele = document.createElement('div');
    ele.classList.add('options')
    let thing = JSON.parse(obj.options)
    Object.keys(thing).forEach(i => {
      ele.appendChild(document.createRange().createContextualFragment(`<div onclick='addVote(this)'>${i} <span>${thing[i]} Votes</span></div>`).children[0]);
    })
    element.appendChild(ele);
    document.querySelector('.ongoing-polls').appendChild(element);
  }


  function addVote(i){
    if(getCook('voted') == 'true') return window.alert('You have already voted!')
    fetch(`http://localhost:8080/updatePoll`, {
      method: 'POST',
      headers:{
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        option: `${i.firstChild.textContent}`,
        comm_id: `${getCook('comm_id')}`
      })
    })
    .then(d => d.json())
    .then(r => {
      if(r.status == 200){
        window.alert('Your vote was submitted!')
      }
    })
  }

  function clearCookies(){
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
  }

  function getCook(cookiename) {
    var cookiestring=RegExp(cookiename+"=[^;]+").exec(document.cookie);
    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./,"") : "");
  }
    
  if(document.cookie == '' && getCook('email_id') == ''){
    document.querySelector('#login-div').style.display = 'block';
  }else{
    document.querySelector('#logout-div').style.display = 'block';
    window.open('http://localhost:8080/')
  }
</script>
</body>
</html>