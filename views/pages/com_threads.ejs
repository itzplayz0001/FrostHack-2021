<!DOCTYPE html>
<html lang="en">
<head>
  <title>Society Name | Dashboard</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
  <style>
    *{
      font-family: 'Inter';
      margin: 0 auto;
    }

    body{
        height: 100vh;
    }
    
    .btnn {
      cursor: pointer;
      position: relative;
      left: 50%;
      color: #fff;
      transform: translateX(-50%);
      width: 80%;
      background-color: rgb(55, 112, 255);
      outline: 0;
      border: 0;
      font-size: 20px;
      padding: 14px 10px;
      font-family: 'Inter', sans-serif;
      border-radius: 5px;
    }
    .top-most{
        background-color: #2d5bff;
        padding: 20px;
        font-weight: 400;
        height: 24vh;
        text-align: center;
    }
    .container{
        background-color: white;
        transform: translateY(-20vh);
        max-height: 90vh;
        min-height: 82vh;
        max-width: 84vw;
        padding: 0px 60px;
        box-shadow: 0 0px 20px rgba(0, 0, 0, 0.15);
    }
    .options{
        margin-top: 10px;
        margin-left: 0;
        cursor: pointer;
    }
    .options div{
      padding: 12px;
      color: rgb(39, 51, 57);
      border: 2px solid rgb(189, 189, 189);
      margin-bottom: 6px;
      max-width: 720px;
      margin: 6px 0;
      border-radius: 4px;
    }
    .options div span{
      float: right;
    }
    .box{
        background-color: #eef3fe;
        padding: 30px 32px;
        border-radius: 20px;
        width: max-content;
    }
    .options p{
        display: block;
        font-size: 22px;
        margin-top: 4px;
        color: #646465;
    }
    .row{
      display: flex;
      justify-content: space-between;
      margin-bottom: 20px;
    }
    .con-section{
      width: 48%;
      height: 32vh;
      overflow: auto;
    }
    .butn{
        background-color: rgb(55, 112, 255);
        border: none;
        color: white;
        font-size: 18px;
        display: block;
        margin: 4px 12px;
        padding: 12px 18px;
        border-radius: 4px;
        cursor: pointer;
    }
    .field {
        background-color: rgb(252, 252, 252);
        border-radius: 4px;
        border: 2px solid rgb(228, 234, 235);
        box-sizing: border-box;
        height: 48px;
        outline: none;
        padding-left: 15px;
        padding-right: 15px;
        width: 100%;
        max-width: 580px;
        font-family: "Nunito Sans", sans-serif;
        font-weight: 400;
        letter-spacing: normal;
        color: rgb(39, 51, 57);
        font-size: 18px;
        line-height: 27px;
        margin: 7px 0;
        display: block  ;
    }
    @media screen and (max-width: 1000px){
      h1{
        font-size: 28px !important;
      }
    }
    @media screen and (max-width: 900px) {
      .headingt{
        display: block !important;
      }
      h1{
        margin-bottom: 2px !important;
      }
      .buttons{
        margin-bottom: 12px !important;
      }
      .row{
        display: block !important;
      }
      .con-section{
        width: 100% !important;
        margin-bottom: 22px;
        height: max-content;
        overflow: visible;
      }
      .container{
        box-shadow: none;
        padding: 0 30px;
        width: 100vw;
        max-width: calc(100vw - 60px);
      }
    }
    label{
        display: block;
        margin-top: 12px;
    }
    @media screen and (max-width: 600px){
      h1{
        width: 100% !important;
        text-align: center;
      }
      .container{
        padding: 0 30px;
        width: 100vw;
        max-width: calc(100vw - 60px);
      }
      .buttons{
        width: 100% !important;
      }
      .butn{
        padding: 12px !important;
      }
    }
    .thread{
        margin-top: 12px;
    }
    .th-con{
        display: flex  ;
    }
    .th-con span{
        width: 50%;
    }
    .th-con span:nth-child(1){
        text-align: left;
        font-weight: 500;
    }
    .th-con span:nth-child(2){
        text-align: right;
    }
    .thead{
        font-size: 22px;
        font-weight: 600;
    }
    .replies{
        margin-top: 12px !important;
        width: 94%;
        margin: 0 auto;
    }
    .add-reply{
        width: 94%;
        margin: 0 auto;
        font-size: 18px;
        padding: 8px;
        border-radius: 6px;
        background-color: #f0f1f1;
        display: flex;
        justify-content: space-between;
    }
    .add-reply input{
        padding: 4px;
        font-size: 17px;
        background-color: transparent;
        border: none;
        width: 100%;
    }
    .reply{
        margin-bottom: 12px;
    }
    .like{
        cursor: pointer;
    }
    input:active, input:focus{
        outline: none;
    }
    button{
        cursor: pointer;
    }
    .images img{
        margin: 0 3px;
    }
  </style>
</head>
<body>
  <div class="top-most">
    <h1 style='color: white;font-weight: 300;'><%= comm_name %></h1>
  </div>
  <div class='container' style="padding-top: 30px;overflow: scroll;"">
    <div class="headingt" style="display: flex;justify-content: space-between;">
      <h1 style='font-size: 32px;margin-bottom: 12px;width: max-content;'>Welcome Back <%= name %>!</h1>
      <div style="display: flex;width: max-content;justify-content: space-around;" class="buttons">
        <div style="display: flex;">
          <button class="butn" onclick='window.open("http://localhost:8080/", "_self");'>Home</button>
          <button class="butn" onclick="logout();">Logout</button>
        </div>
      </div>
    </div>
    <div>
        <h1>Community Threads</h1>
        <div class="ongoing-threads">
            <div style="display: none;" id="hiddenDiv">
                <%= JSON.stringify(data) %>
            </div>
            <div class="threads">

            </div>            
        </div>
    </div>
    </div>
  </div>
  <script type="text/javascript">!function(){"use strict";var e="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this,t=9007199254740991;function f(e){return!("number"!=typeof e||e!=e||e===1/0||e===-1/0)}function l(e){return"number"==typeof e&&Math.abs(e)<=t}var n=/(hundred|thousand|(m|b|tr|quadr)illion)$/,r=/teen$/,o=/y$/,i=/(zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)$/,s={zero:"zeroth",one:"first",two:"second",three:"third",four:"fourth",five:"fifth",six:"sixth",seven:"seventh",eight:"eighth",nine:"ninth",ten:"tenth",eleven:"eleventh",twelve:"twelfth"};function h(e){return n.test(e)||r.test(e)?e+"th":o.test(e)?e.replace(o,"ieth"):i.test(e)?e.replace(i,a):e}function a(e,t){return s[t]}var u=10,d=100,p=1e3,v=1e6,b=1e9,y=1e12,c=1e15,g=9007199254740992,m=["zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],w=["zero","ten","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"];function x(e,t){var n,r=parseInt(e,10);if(!f(r))throw new TypeError("Not a finite number: "+e+" ("+typeof e+")");if(!l(r))throw new RangeError("Input is not a safe number, it‚Äôs either too large or too small.");return n=function e(t){var n,r,o=arguments[1];if(0===t)return o?o.join(" ").replace(/,$/,""):"zero";o||(o=[]);t<0&&(o.push("minus"),t=Math.abs(t));t<20?(n=0,r=m[t]):t<d?(n=t%u,r=w[Math.floor(t/u)],n&&(r+="-"+m[n],n=0)):t<p?(n=t%d,r=e(Math.floor(t/d))+" hundred"):t<v?(n=t%p,r=e(Math.floor(t/p))+" thousand,"):t<b?(n=t%v,r=e(Math.floor(t/v))+" million,"):t<y?(n=t%b,r=e(Math.floor(t/b))+" billion,"):t<c?(n=t%y,r=e(Math.floor(t/y))+" trillion,"):t<=g&&(n=t%c,r=e(Math.floor(t/c))+" quadrillion,");o.push(r);return e(n,o)}(r),t?h(n):n}var M={toOrdinal:function(e){var t=parseInt(e,10);if(!f(t))throw new TypeError("Not a finite number: "+e+" ("+typeof e+")");if(!l(t))throw new RangeError("Input is not a safe number, it‚Äôs either too large or too small.");var n=String(t),r=Math.abs(t%100),o=11<=r&&r<=13,i=n.charAt(n.length-1);return n+(o?"th":"1"===i?"st":"2"===i?"nd":"3"===i?"rd":"th")},toWords:x,toWordsOrdinal:function(e){return h(x(e))}};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=M),exports.numberToWords=M):e.numberToWords=M}();</script>
<script>
    

  setTimeout(() => {
    initiateData()
  }, 500)
    
  function initiateData(){
    let thing = JSON.parse(document.querySelector('#hiddenDiv').innerHTML);
    thing.forEach(i => {
        console.log(i);
        let x = `<div class="thread">
            <div class="th-con">
                <span>${i.author}</span>
                <span>${new Date(i.datetime).toLocaleString()}</span>
            </div>
            <p class="thead">${i.thread_h}</p>
            <p class="tcon">${i.thread_c}</p>
            <p class="like" onclick='likeThread(this)'>üëç Like | <b>${i.likes} Likes</b></p>
            <div class="replies">
                ${JSON.parse(i.replies).length == 0 ? '' : JSON.parse(i.replies).map(x => {
                    console.log();
                    return `<div class="reply">
                        <div class="th-con">
                            <span>${Object.keys(x)[0]}</span>
                            <span>${new Date(x[Object.keys(x)[0]]['date']).toLocaleString()}</span>
                        </div>
                        <p class="reply-con">${x[Object.keys(x)]['con']}</p>
                    </div>`;
                }).join('')}
            </div>
            <div class="add-reply">
                <input type='text' placeholder="Type your reply...">
                <button onclick="addReply(this);">Send</button>
            </div>
        </div>`
        document.querySelector('.threads').innerHTML += x;
    })
  }

  function addReply(x){
    let date = Array.from(x.parentElement.parentElement.firstElementChild.children)[1].innerHTML;
    let author = Array.from(x.parentElement.parentElement.firstElementChild.children)[0].innerHTML;
    let reply = Array.from(x.parentElement.children)[0].value;
    console.log(date, author, reply)
    fetch('http://localhost:8080/addReply', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            date: date,
            author: author,
            reply: reply
        })
    }).then(r => r.json())
    .then(d => {
        Array.from(document.querySelectorAll('input')).forEach(i => {
            i.value = ''
        })
        Array.from(x.parentElement.parentElement.children)[4].innerHTML = `${JSON.parse(d.replies).map(x => {
            return `<div class="reply">
                <div class="th-con">
                    <span>${Object.keys(x)[0]}</span>
                    <span>${new Date(x[Object.keys(x)[0]]['date']).toLocaleString()}</span>
                </div>
                <p class="reply-con">${x[Object.keys(x)]['con']}</p>
            </div>`;
        }).join('')}`
    })
  }

  function likeThread(x){
      console.log(x)
    let date = Array.from(x.parentElement.firstElementChild.children)[1].innerHTML;
    let author = Array.from(x.parentElement.firstElementChild.children)[0].innerHTML;
    fetch(encodeURI(`http://localhost:8080/likeThread?date=${formatDate(new Date(date))}&author=${author}`))
    .then(r => r.text())
    .then(d => {
        Array.from(x.parentElement.children)[3].innerHTML = `üëç Like | <b>${d} Likes</b>`
    })
  }

  function logout(){
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
    window.open('http://localhost:8080/login', '_self')
  }

  function setCookie(cName, cValue, expDays) {
    let date = new Date();
    date.setTime(date.getTime() + (expDays * 24 * 60 * 60 * 1000));
    const expires = "expires=" + date.toUTCString();
    document.cookie = cName + "=" + cValue + "; " + expires + "; path=/";
  }

  function formatDate(date) {
  var d = new Date(date),
      month = '' + (d.getMonth() + 1),
      day = '' + d.getDate(),
      year = d.getFullYear();

  if (month.length < 2) 
      month = '0' + month;
  if (day.length < 2) 
      day = '0' + day;

  return [year, month, day].join('-');
}

  function clearCookies(){
    var cookies = document.cookie.split(";");

    for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
    }
  }

  function getCook(cookiename) {
    var cookiestring=RegExp(cookiename+"=[^;]+").exec(document.cookie);
    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./,"") : "");
  }
    
  if(document.cookie == '' && getCook('email_id') == ''){
    document.querySelector('#login-div').style.display = 'block';
  }else{
    document.querySelector('#logout-div').style.display = 'block';
    window.open('http://localhost:8080/')
  }
</script>
</body>
</html>